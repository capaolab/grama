services:
  grama:
    build:
      dockerfile: ./docker/dockerfile.dev
    container_name: grama_app
    image: 'grama:latest'  
    restart: always
    command: npm run dev
    env_file:
      - .env
    ports:
      - ${PORT:-3000}:3000
    develop:
      watch:
        - action: sync
          path: ./grama
          target: /app
          ignore:
            - node_modules
            - coverage
            - playwright-report
            - playwright-test-results
            - test-results
        - action: sync+restart
          path: .env
          target: /app/.env
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:14
    restart: always
    container_name: grama_db
    volumes:
      - ./db_data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    ports:
      - ${DB_PORT:-5432}:5432
      #- 5432:5432
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
    healthcheck:
          test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
          interval: 10s
          timeout: 5s
          retries: 3
volumes:
  db_data: {}